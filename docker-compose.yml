version: '3.8'

services:
  # Application KinéBilan
  app:
    build: .
    image: kinebilan:latest
    container_name: kinebilan_app
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - kine_data:/app/instance
      - kine_logs:/app/logs
      - ./app:/app/app  # Pour le développement (monter les sources)
    environment:
      - REDIS_URL=redis://localhost:6379/0
      - APP_ENV=production
      - FLASK_APP=app
      - SECRET_KEY=${SECRET_KEY:-change_me_in_production}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-change_me_in_production}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-change_me_in_production}
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis pour la mise en cache et les files d'attente
  redis:
    image: redis:latest
    container_name: kinebilan_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50

volumes:
  kine_data:
    name: kinebilan_data
  kine_logs:
    name: kinebilan_logs
  redis_data:
    name: kinebilan_redis_data 